esphome:
  name: grey-water-tank

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secrets api_password 

ota:
  password: !secrets ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Grey-Water-Tank Fallback Hotspot"
    password: "YXZwfxgLFTp1"

captive_portal:
    
sensor:
  - platform: uptime
    name: "watersens01 Uptime"
  - platform: wifi_signal
    name: "watersens01 WiFi Signal"
    update_interval: 120s 
  - platform: adc
    pin: A0
    name: "Water Level Voltage"
    id: water_voltage
    update_interval: 2s
    accuracy_decimals: 3
  - platform: template
    name: "Water Level Percent"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    update_interval: 2s
    lambda: |-
          if (id(water_voltage).state < 0.02578) {
           return 25;
          } else if (id(water_voltage).state < 0.05479) {
           return 30;
          } else if (id(water_voltage).state < 0.06768) {
           return 33;
          } else if (id(water_voltage).state < 0.09023) {
           return 35;
          } else if (id(water_voltage).state < 0.10957) {
           return 40;
          } else if (id(water_voltage).state < 0.12246) {
           return 45;
          } else if (id(water_voltage).state < 0.13213) {
           return 50;
          } else if (id(water_voltage).state < 0.15469) {
           return 53;
          } else if (id(water_voltage).state < 0.16113) {
           return 56;
          } else if (id(water_voltage).state < 0.18047) {
           return 60;
          } else if (id(water_voltage).state < 0.19336) {
           return 64;
          } else if (id(water_voltage).state < 0.19980) {
           return 67;
          } else if (id(water_voltage).state < 0.21592) {
           return 71;
          } else if (id(water_voltage).state < 0.23848) {
           return 75;
          } else if (id(water_voltage).state < 0.25137) {
           return 85;
          } else {
           return 100;
          }
    # lambda: return (id(water_voltage).state - 1.16982) * 62.94;
